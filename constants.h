#ifndef CONSTANTS_H
#define CONSTANTS_H

#include "instructions.h"

#define memorySize 8192
#define memoryPartition 20
#define MAX_LINE_SIZE 80
#define MAX_SYMBOL_NAME_LENGTH 32
#define TRUE 1
#define FALSE 0
#define REGISTERS_AMOUNT 16
#define COMMANDS_AMOUNT 16

#define ADDRESS_METHOD_AMOUNT 4
#define IMMEDIATE_ADDRESING 0x01
#define DIRECT_ADDRESING 0x02
#define INDEX_ADDRESSING 0x04
#define REGISTER_DIRECT_ADDRESSING 0x08
#define ALL_ADDRESSING_METHODS IMMEDIATE_ADDRESING | DIRECT_ADDRESING | INDEX_ADDRESSING | REGISTER_DIRECT_ADDRESSING
#define DIRECT_INDEX_REGISTER_ADDRESSING DIRECT_ADDRESING | INDEX_ADDRESSING | REGISTER_DIRECT_ADDRESSING

#define EXTERNAL_ENCODING_TYPE 0x01
#define RELOCATABLE_ENCODING_TYPE 0x02
#define ABSOLUTE_ENCODING_TYPE 0x04


typedef struct {
    uint8_t method;
    uint8_t numOfWords;
} AddressMethodWords;

AddressMethodWords addressMethodsWordsDict[ADDRESS_METHOD_AMOUNT] = {
    {IMMEDIATE_ADDRESING, 1},
    {DIRECT_ADDRESING, 2},
    {INDEX_ADDRESSING, 2},
    {REGISTER_DIRECT_ADDRESSING, 0}
};

CommandNode COMMANDS[16] = {
    {"mov", 0, 0, ALL_ADDRESSING_METHODS, DIRECT_INDEX_REGISTER_ADDRESSING},
    {"cmp", 1, 0, ALL_ADDRESSING_METHODS, ALL_ADDRESSING_METHODS},
    {"add", 2, 10, ALL_ADDRESSING_METHODS, DIRECT_INDEX_REGISTER_ADDRESSING},
    {"sub", 2, 11, ALL_ADDRESSING_METHODS, DIRECT_INDEX_REGISTER_ADDRESSING},
    {"lea", 4, 0, DIRECT_ADDRESING | INDEX_ADDRESSING, DIRECT_INDEX_REGISTER_ADDRESSING},
    {"clr", 5, 10, 0, DIRECT_INDEX_REGISTER_ADDRESSING},
    {"not", 5, 11, 0, DIRECT_INDEX_REGISTER_ADDRESSING},
    {"inc", 5, 12, 0, DIRECT_INDEX_REGISTER_ADDRESSING},
    {"dec", 5, 13, 0, DIRECT_INDEX_REGISTER_ADDRESSING},
    {"jmp", 9, 10, 0, DIRECT_ADDRESING | INDEX_ADDRESSING},
    {"bne", 9, 11, 0, DIRECT_ADDRESING | INDEX_ADDRESSING},
    {"jsr", 9, 12, 0, DIRECT_ADDRESING | INDEX_ADDRESSING},
    {"red", 12, 0, 0, DIRECT_INDEX_REGISTER_ADDRESSING},
    {"prn", 13, 0, 0, ALL_ADDRESSING_METHODS},
    {"rts", 14, 0, 0, 0},
    {"stop", 15, 0, 0, 0}
};

typedef enum {
    SOURCE, DESTINATION
} OperandType;

#endif